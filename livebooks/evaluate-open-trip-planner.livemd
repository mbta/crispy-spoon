<!-- livebook:{"file_entries":[{"file":{"file_system_id":"local","file_system_type":"local","path":"/Users/anthonyshull/workspace/dotcom/livebooks/plans.yml"},"name":"plans.yml","type":"file"}]} -->

# Evaluate Open Trip Planner

## Section

```elixir
defmodule EvaluateOpenTripPlanner.Helpers do
  @moduledoc false

  def address_to_named_position(address) do
    address
    |> LocationService.geocode()
    |> Kernel.elem(1)
    |> List.first()
    |> TripPlan.NamedPosition.new()
  end

  def attach_itineraries_to_plan(%{"from" => from, "to" => to} = plan) do
    itineraries =
      plan(from, to)
      |> Kernel.elem(1)
      |> itineraries_to_strings()

    Map.put(plan, "itineraries", itineraries)
  end

  def plan(from, to) do
    TripPlan.Api.OpenTripPlanner.plan(
      address_to_named_position(from),
      address_to_named_position(to),
      []
    )
  end

  def itineraries_to_strings(itineraries) when is_binary(itineraries) do
    [itineraries]
  end

  def itineraries_to_strings(itineraries) when is_list(itineraries) do
    Enum.map(itineraries, &itinerary_to_string/1)
  end

  def itinerary_to_string(itinerary) do
    Enum.map(itinerary.legs, &leg_to_string/1)
  end

  def leg_to_string(%{description: "WALK"} = leg) do
    "#{leg.description} FROM #{leg.from.name} TO #{leg.to.name}"
  end

  def leg_to_string(%{description: "BUS"} = leg) do
    "TAKE #{leg.name} #{leg.description} FROM #{leg.from.name} TO #{leg.to.name}"
  end

  def leg_to_string(leg) do
    "TAKE #{leg.long_name} #{leg.description} FROM #{leg.from.name} TO #{leg.to.name}"
  end
end

alias EvaluateOpenTripPlanner.Helpers
```

```elixir
write_path =
  System.tmp_dir!()
  |> Path.join("itineraries.yml")
  |> IO.puts()

yaml =
  File.cwd!()
  |> Path.join("/livebooks/plans.yml")
  |> YamlElixir.read_from_file!()
  |> Enum.map(&Helpers.attach_itineraries_to_plan/1)
  |> Ymlr.document!()

File.write!(write_path, yaml)
```

<!-- livebook:{"offset":1929,"stamp":{"token":"XCP.XbMk6u3WaEFxcwQf0eM76oS0n1cV0-o2-nf2FgSDf3hRaidXwycL82UMdNCeQOY4i-zN4dv34h1NsHuWKdSRckjHOD1ADuYCGvZRrw","version":2}} -->
