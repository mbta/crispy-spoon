name: Deploy to Production

on:
  workflow_dispatch:
  schedule:
  - cron: '0 18 * * 4'

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: prod
    concurrency: prod
    env:
      AWS_REGION: us-east-1
      ELASTICBEANSTALK_APPLICATION_NAME: dotcom
      ELASTICBEANSTALK_ENVIRONMENT_NAME: dotcom-prod

    steps:
      - uses: actions/checkout@v2
      - id: metadata
        uses: mbta/actions/commit-metadata@v1
      - uses: mbta/actions/build-push-ecr@v1
        id: build-push
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          docker-repo: ${{ secrets.DOCKER_REPO }}
      - id: deployment-package
        uses: mbta/actions/eb-ecr-dockerrun@v1
        with:
          docker-tag: ${{ steps.build-push.outputs.docker-tag }}
      - name: Deploy to EB
        uses: mbta/beanstalk-deploy@v18
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application-name: ${{ env.ELASTICBEANSTALK_APPLICATION_NAME }}
          environment-name: ${{ env.ELASTICBEANSTALK_ENVIRONMENT_NAME }}
          version-label: ${{ steps.metadata.outputs.sha-short }}
          version-description: ${{ steps.metadata.outputs.commit-message }}
          region: ${{ env.AWS_REGION }}
          deployment-package: ${{ steps.deployment-package.outputs.deployment-package }}
          use-existing-version-if-available: true
      - uses: mbta/actions/notify-slack-deploy@v1
        if: ${{ !cancelled() }}
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK }}
          job-status: ${{ job.status }}

  release:
    name: Create release
    runs-on: ubuntu-latest
    needs: deploy
    if: ${{ success() }}
    steps:
      - uses: actions/checkout@v2
      - name: Get tag values...
        run: |
          echo PREV_TAG=$(git describe --tags --abbrev=0) >> $GITHUB_ENV
          echo TODAY=$(date +'%Y.%m.%d') >> $GITHUB_ENV
      - name: List commits since last tag
        run: |
          echo BODY=$(git log --abbrev-commit --no-decorate --pretty=oneline $PREV_TAG..$GITHUB_REF) >> $GITHUB_ENV
          echo "Commits to be released: ${BODY}"
      - name: Compute new tag name by incrementing last tag
        if: startsWith(env.PREV_TAG, env.TODAY)
        run: |
          TAG_NUM="${PREV_TAG##*.}"
          NEW_NUM="$((10#${TAG_NUM}+1))"
          NEW_NUM="$(printf %02d $NEW_NUM)"
          echo TAG="${TODAY}.${NEW_NUM}" >> $GITHUB_ENV
          echo "Incrementing tag from ${PREV_TAG} to ${TAG}"
      - name: Compute new tag name
        if: > 
          !startsWith(env.PREV_TAG, env.TODAY)
        run: |
          echo TAG="${TODAY}.01" >> $GITHUB_ENV
          echo "Creating tag ${TAG}"
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: ${{ env.TAG }}
          body: ${{ env.BODY }}
