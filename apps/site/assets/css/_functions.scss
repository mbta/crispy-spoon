/// Get unitless value
/// @author robwierzbowski
/// @access public
/// @param {Number} $number - number (with em, px, rem, etc)
/// @return {*} - Desired value (number w/o units attached)
@use 'sass:math';

@function strip-units($number) {
  @return math.div($number, $number * 0 + 1);
}

/// Map deep get
/// @author Hugo Giraudel
/// @access public
/// @param {Map} $map - Map
/// @param {Arglist} $keys - Key chain
/// @return {*} - Desired value
@function map-deep-get($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }
  @return $map;
}

// This function is best used with the key names in $mbta-line-colors - it will
// output a black and white set otherwise. The optional $inverse parameter is
// intended to output values more appropriate for non-white backgrounds. Returns
// a map with two values: 'fill' can be used as a main color, e.g. to fill icon
// SVG paths, and 'empty-fill' can be used to fill "holes" in the icon to match
// a background color - this can be useful with $inverse: true
@function get-icon-colors($line-name, $inverse: false) {
  $icon-fill-color: map-get($mbta-line-colors, $line-name);
  @if not $icon-fill-color {
    $icon-fill-color: $black;
  }

  $icon-colors: (
    'empty-fill': $white,
    'fill': $icon-fill-color
  );

  @if $line-name == 'bus' {
    // since the bus is light yellow we want it with $black not $white
    $icon-colors: map-merge($icon-colors, ('empty-fill': $black));
  }

  @if $inverse {
    // we want the fill to be black/white and the empty-fill to be colored
    $icon-colors: map-merge($icon-colors, (
      'empty-fill': map-get($icon-colors, 'fill'),
      'fill': map-get($icon-colors, 'empty-fill')
    ));

    // exception for bus: white empty-fill in a black icon
    @if $line-name == 'bus' {
      $icon-colors: map-merge($icon-colors, ('empty-fill': $white));
    }
  }

  @return $icon-colors;
}
