{
  "scripts": {
    "eslint": "git diff --name-only --diff-filter=dx origin/master... | grep apps/site/assets/js/.*\\.js | xargs apps/site/assets/node_modules/.bin/eslint -c apps/site/assets/.eslintrc.js",
    "tslint": "cd apps/site/assets && npm run tslint",
    "eslint:fix": "git diff --name-only --diff-filter=dx origin/master... | grep apps/site/assets/js/.*\\.js | xargs apps/site/assets/node_modules/.bin/eslint -c apps/site/assets/.eslintrc.js --fix",
    "stylelint": "cd apps/site/assets && npm run stylelint",
    "format": "cd apps/site/assets && node_modules/.bin/prettier --write \"{js,ts}/**/*.{js,ts,tsx}\"",
    "format:check": "cd apps/site/assets && node_modules/.bin/prettier \"{js,ts}/**/*.{js,ts,tsx}\" --list-different",
    "install": "npm install --prefix apps/site/assets --omit=optional && npm install --prefix apps/site/react_renderer --omit=optional",
    "install:ci": "npm ci --prefix apps/site/assets --omit=optional && npm ci --prefix apps/site/react_renderer --omit=optional",
    "prebuild": "mix phx.digest",
    "build": "npm run --prefix apps/site/react_renderer build && npm run --prefix apps/site/assets webpack:build",
    "postbuild": "mix compile --warnings-as-errors",
    "test": "mix test && npm run test:js && mix backstop.tests",
    "test:js": "cd apps/site/assets && npm run test",
    "test:jest": "cd apps/site/assets && npm run test:jest",
    "test:jest:update": "cd apps/site/assets && npm run test:jest:update",
    "test:jest:watch": "cd apps/site/assets && npm run test:jest:watch",
    "test:jest:cov": "open apps/site/assets/ts/coverage/index.html",
    "backstop": "./semaphore/backstop.sh",
    "backstop:record": "ENABLE_RECORDING=true ./semaphore/backstop.sh",
    "backstop:record:clean": "rm -r apps/site/test/__files/*.json && rm -r apps/site/test/mappings/mapping* && npm run backstop:record",
    "backstop:approve": "cd apps/site/test && ../assets/node_modules/.bin/backstop approve",
    "backstop:test": "cd apps/site/test && ../assets/node_modules/.bin/backstop test --docker",
    "brunch:build:namespaced": "cd apps/site/assets/namespaced_header_footer && npm run brunch:build",
    "ts:build": "cd apps/site/assets/ts && npm run ts:build",
    "routes": "cd apps/site && mix phx.routes && cd ../..",
    "dialyzer": "mix dialyzer --halt-exit-status"
  }
}
